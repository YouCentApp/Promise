@page "/signin"
@inject ISettings settings

<h1>Sign In</h1>

<div class="container">
    <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" class="form-control" @bind="username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" class="form-control" @bind="password" />
    </div>

    <button class="btn btn-primary" @onclick="SubmitForm">Submit</button>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>
    }
</div>

@code {
    private string? username;
    private string? password;
    private string? errorMessage;
    private string api = settings.ApiUrl;

    private void SubmitForm()
    {
        errorMessage = null;
        ValidateForm();

        if (string.IsNullOrEmpty(errorMessage))
        {
            if (string.IsNullOrEmpty(api))
            {
                MainLogger.LogError("API URL is not set.");
                errorMessage = "Sorry, something went wrong. Please try again later.";
                return;
            }


// temp
            errorMessage = "Form submitted. API : " + api;
            Console.WriteLine($"API: {api}");
            Console.WriteLine($"Username: {username}");
            Console.WriteLine($"Password: {password}");

            //end temp
        }
    }

    private void ValidateForm()
    {
        if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))
        {
            errorMessage = "Please enter a username and password.";
            return;
        }

        if (username?.Length < Policy.MinimumUsernameLength || password?.Length < Policy.MinimumPasswordLength)
        {
            errorMessage = "Username or/and password must be longer.";
            return;
        }

        if (username?.Length > Policy.MaximumUsernameLength || password?.Length > Policy.MaximumPasswordLength)
        {
            errorMessage = "Username or/and password must be shorter.";
            return;
        }
    }
}