@page "/updatepassword"
@using System.Text.Json
@using System.Text
@using System.Net.Http.Headers
@inject AppState appState
@inject NavigationManager navigationManager
@inject ISettings settings

<h1>Update Password</h1>

<h2>You are about to update the password for username: @username</h2>
<br>
<div>
    <div class="form-group col-md-6">
        <label for="oldPassword">Old Password</label>
        <input type="password" class="form-control" id="oldPassword" placeholder="Enter old password"
            @bind="oldPassword" />
    </div>
    <br>    
    <div class="form-group col-md-6">
        <label for="password">New Password</label>
        <input type="password" class="form-control" id="password" placeholder="Enter password" @bind="password" />
    </div>
    <br>
    <div class="form-group col-md-6">
        <label for="confirmPassword">Confirm New Password</label>
        <input type="password" class="form-control" id="confirmPassword" placeholder="Enter password to confirm"
            @bind="confirmPassword" />
    </div>
    <br>
    <button type="submit" class="btn btn-primary" @onclick="SaveData">Save</button>
</div>
<br>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <br>
    <div class="alert alert-danger" role="alert">
    @errorMessage
</div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <br><br>
    <div class="alert alert-success" role="alert">
    @successMessage
</div>
}


@code {
    private string? username;
    private long? userId;
    private string? password;
    private string? confirmPassword;
    private string? oldPassword;
    private string? errorMessage;
    private string? successMessage;
    private string api => settings.ApiUrl;

    protected override void OnInitialized()
    {
        if (!appState.IsSignedIn)
        {
            navigationManager.NavigateTo("signin");
        }
        username = appState.Username;
        userId = appState.UserId;
    }

    private async Task SaveData()
    {
        errorMessage = null;
        successMessage = null;
        if (string.IsNullOrEmpty(confirmPassword) || string.IsNullOrEmpty(password) || string.IsNullOrEmpty(oldPassword))
        {
            errorMessage = "Please enter all fields!";
            return;
        }
        if (password != confirmPassword)
        {
            errorMessage = "Passwords do not match!";
            return;
        }
        if (password.Length < Policy.MinimumPasswordLength || password.Length > Policy.MaximumPasswordLength)
        {
            errorMessage = $"Password must be between {Policy.MinimumPasswordLength} and {Policy.MaximumPasswordLength} characters.";
            return;
        }
        if (string.IsNullOrEmpty(api))
        {
            MainLogger.LogError("API URL is not set.");
            errorMessage = "Sorry, something went wrong. Please try again later.";
            return;
        }
        var oldUser = new User
            {
                Id = appState.UserId,
                Login = appState.Username,
                Password = oldPassword
            };
        var newUser = new User
            {
                Id = appState.UserId,
                Login = appState.Username,
                Password = confirmPassword
            };
        var userUpdate = new UserUpdate
            {
                OldUser = oldUser,
                NewUser = newUser
            };

        var json = JsonSerializer.Serialize(userUpdate);
        var request = new HttpRequestMessage(HttpMethod.Put, $"{api}/updatepassword");
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", appState.Token);
        request.Content = new StringContent(json, Encoding.UTF8, "application/json");

        using var httpClient = new HttpClient();
        var response = await httpClient.SendAsync(request);
        var responseObject = await response.Content.ReadFromJsonAsync<ApiResponse>();
        if (response.IsSuccessStatusCode)
        {
            if (responseObject is not null && responseObject.Success)
            {
                successMessage = "Perspnal Data updated successfully!";
            }
            else
            {
                errorMessage = "Sorry, something went wrong. Please try again later. Possible reason: "
                + responseObject?.Error ??
                "Unknown error...";
            }
        }
        else
        {
            errorMessage = "Sorry, something went wrong. Please try again later. Possible reason: "
            + responseObject?.Error ??
            "Unknown error...";
        }
    }
}
