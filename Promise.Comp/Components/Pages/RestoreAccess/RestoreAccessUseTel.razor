@page "/restoreaccessusetel"
@using System.Text.Json
@using System.Text
@using System.Net.Http.Headers
@inject AppState appState
@inject NavigationManager navigationManager
@inject ISettings settings

<h1>Restore Access Using Telephone Number</h1>

<p>Please enter your username and the telephone number you saved previously</p>
<br>

<div class="form-group col-md-6">
    <label for="username">Username:</label>
    <input type="text" id="username" class="form-control" @bind="username" />
</div>
<div class="form-group col-md-6">
    <label for="tel">Telephone Number:</label>
    <div class="d-flex">
        <select class="form-control me-2" @bind="selectedCountryCode">
            <option value="">Choose Country Code</option>
            @foreach (var country in CountryCode.Values)
            {
                <option value="+@country.Code">@country.Name (+@country.Code)</option>
            }
        </select>
        <input type="tel" id="tel" class="form-control" @bind="tel" />
    </div>
</div>
<br>
<div class="form-group col-md-12">
    <button type="button" class="btn btn-primary" @onclick="RestoreAccessAsync">Restore Access</button>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <br>
    <br>
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <br>
    <br>
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

@code {
    private string? username;
    private string? tel;
    private string? errorMessage;
    private string? successMessage;
    private string? maskedTel;
    private string selectedCountryCode = "";
    private int maxAttempts = 3;
    private string api => settings.ApiUrl;

    private async Task RestoreAccessAsync()
    {
        errorMessage = null;
        successMessage = null;
        maskedTel = null;

        if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(tel) || string.IsNullOrEmpty(selectedCountryCode))
        {
            errorMessage = "Username, country code, and telephone number are required.";
            return;
        }

        try
        {
            using var httpClient = new HttpClient();
            var requestData = new RestoreAccessInfo
            {
                Username = username,
                UseData = $"{selectedCountryCode}{tel}"
            };
            var content = new StringContent(JsonSerializer.Serialize(requestData), Encoding.UTF8, "application/json");

            var response = await httpClient.PostAsync($"{api}/restoreaccessusetel", content);
            var responseObject = await response.Content.ReadFromJsonAsync<ApiResponseUserAccessRestore>();

            if (response.IsSuccessStatusCode)
            {
                if (responseObject is not null && responseObject.Success)
                {
                    successMessage = "A temporary password has been generated. Our admin will contact you soon.";
                }
                else
                {
                    if (responseObject?.MaskedTel != null)
                    {
                        errorMessage = "Incorrect telephone number. Hint: " + responseObject.MaskedTel;
                    }
                    else
                    {
                        errorMessage = "Sorry, something went wrong. Please try again later. Possible reason: "
                        + responseObject?.Error ?? "Unknown error...";
                    }
                }
            }
            else
            {
                errorMessage = "An error occurred while restoring access. Possible reason: "
                + responseObject?.Error ?? "Unknown error...";
            }
        }
        catch (Exception ex)
        {
            MainLogger.LogError($"An error occurred while restoring access. Username: {username}. Exception: {ex.Message}");
            errorMessage = "An error occurred while restoring access.";
        }
    }
}
